@page "/"
@using IlemlamlaBlazor.Interfaces
@using IlemlamlaBlazor.Models
@inject IBirthdayDataService BirthdayDataService

<style>
    body {
        font-family: 'Patrick Hand', cursive; /* Handwritten-style font */
        background-color: #f5f5f5; /* Light gray background */
        color: #333;
        margin: 0;
        padding: 20px;
    }

    .paper-container {
        max-width: 800px;
        margin: 0 auto;
        background-color: #fff; /* White paper background */
        padding: 30px;
        border: 1px solid #ddd; /* Subtle border */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Shadow for depth */
        border-radius: 8px; /* Rounded corners */
    }

    h1 {
        color: #4A90E2;
        text-align: center;
        margin-bottom: 20px;
        font-size: 2.5rem; /* Larger heading */
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .table th, .table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd; /* Subtle border for rows */
        }

        .table th {
            background-color: #f9f9f9; /* Light gray header */
            font-weight: bold;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1; /* Hover effect */
        }

    .loading {
        text-align: center;
        color: #4A90E2;
        font-size: 1.2rem;
    }
</style>

<div class="paper-container">
    <h1>ILEMLAMLA</h1>

    @if (birthdayItems == null)
    {
        <p class="loading">Loading...</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Kto</th>
                    <th>Ilemlamla</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in birthdayItems)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@FormatDate(item.Date)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<BirthdayItem> birthdayItems;

    protected override async Task OnInitializedAsync()
    {
        birthdayItems = await BirthdayDataService.GetBirthdayItemsAsync();
    }

    private string FormatDate(string dateString)
    {
        if (DateTime.TryParseExact(dateString, "yyyyMMddHHmm", null, System.Globalization.DateTimeStyles.None, out DateTime date))
        {
            return date.ToString("yyyy-MM-dd HH:mm");
        }
        return dateString;
    }
}